[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 63 products, 23 sources, 1 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/1.DefaultV/InputOutput.scala, ${BASE}/src/main/scala/4.Pattern-Case/Case-Class.scala, ${BASE}/src/main/scala/2.OOP/Polymorphism.scala, ${BASE}/src/main/scala/1.DefaultV/DefaultVariable.scala, ${BASE}/src/main/scala/2.OOP/Constructor-field.scala, ${BASE}/src/main/scala/Hello.scala, ${BASE}/src/main/scala/4.Pattern-Case/Pattern-Matching.scala, ${BASE}/src/main/scala/1.DefaultV/Variable.scala, ${BASE}/src/main/scala/2.OOP/Class-Object.scala, ${BASE}/src/main/scala/3.Function-P/Higher-order-Functions.scala, ${BASE}/src/main/scala/Main.scala, ${BASE}/src/main/scala/1.DefaultV/Function.scala, ${BASE}/src/main/scala/4.Pattern-Case/Sequnce-Matching.scala, ${BASE}/src/main/scala/3.Function-P/Collection-Functions.scala, ${BASE}/src/main/scala/2.OOP/AbstructclassVStrait.scala, ${BASE}/src/main/scala/3.Function-P/Option-Some-None.scala, ${BASE}/src/main/scala/3.Function-P/Pure-Functions.scala, ${BASE}/src/main/scala/1.DefaultV/Loop.scala, ${BASE}/src/main/scala/3.Function-P/Immutable.scala, ${BASE}/src/main/scala/4.Pattern-Case/Case-Pattern.scala, ${BASE}/src/main/scala/4.Pattern-Case/SealedClassExample.scala, ${BASE}/src/main/scala/1.DefaultV/Conditionals.scala, ${BASE}/src/main/scala/2.OOP/SingleObject.scala, ${BASE}/src/main/scala/3.Function-P/Anonymous-Function.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/4.Pattern-Case/SealedClassExample.scala), removed = Set(), changed = Set(${BASE}/src/main/scala/4.Pattern-Case/Sequnce-Matching.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/main/scala/4.Pattern-Case/SealedClassExample.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/4.Pattern-Case/Sequnce-Matching.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(patterncase.SequencePatternExample)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(patterncase.SequencePatternExample)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/4.Pattern-Case/SealedClassExample.scala, ${BASE}/src/main/scala/4.Pattern-Case/Sequnce-Matching.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.SequencePatternExample[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to C:\Users\wjdgh\Desktop\bloging-tistory\back-End\scala\scala-bloging\scala-bloging\target\scala-2.13\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: C:\Users\wjdgh\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala2-sbt-bridge\2.13.12\scala2-sbt-bridge-2.13.12.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 2d35fc25 for Scala compiler version 2.13.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\wjdgh\Desktop\bloging-tistory\back-End\scala\scala-bloging\scala-bloging\target\scala-2.13\classes;C:\Users\wjdgh\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.12\scala-library-2.13.12.jar;C:\Users\wjdgh\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-parser-combinators_2.13\2.3.0\scala-parser-combinators_2.13-2.3.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.4858001 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.UnknownShape...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.UnknownShape[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.UnknownShape)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.UnknownShape,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(UnknownShape,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]))) invalidates 1 classes due to The patterncase.UnknownShape has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(UnknownShape,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(canEqual,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.UnknownShape)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.SealedClassExample...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.SealedClassExample[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.SealedClassExample)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.SealedClassExample,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(shapeInfo,[Default]), UsedName(eq,[Default]), UsedName(SealedClassExample,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(area,[Default]))) invalidates 1 classes due to The patterncase.SealedClassExample has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(main,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(shapeInfo,[Default]), UsedName(eq,[Default]), UsedName(SealedClassExample,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(area,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.SealedClassExample)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.Triangle...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.Triangle[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.Triangle)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.Triangle,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(b,[Default]), UsedName(Triangle,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(a,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(unapply,[Default]), UsedName(patterncase;Triangle;init;,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(tupled,[Default]), UsedName(c,[Default]))) invalidates 1 classes due to The patterncase.Triangle has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(b,[Default]), UsedName(Triangle,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(a,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(unapply,[Default]), UsedName(patterncase;Triangle;init;,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(tupled,[Default]), UsedName(c,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.Triangle)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.Shape...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding patterncase.Triangle by patterncase.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding patterncase.Rectangle by patterncase.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding patterncase.Circle by patterncase.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding patterncase.UnknownShape by patterncase.Shape[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.Circle, patterncase.Triangle, patterncase.Rectangle, patterncase.Shape, patterncase.UnknownShape)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.Shape,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(description,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(Shape,[Default]))) invalidates 5 classes due to The patterncase.Shape has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(description,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(Shape,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.Circle, patterncase.Triangle, patterncase.Rectangle, patterncase.Shape, patterncase.UnknownShape)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.Circle...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.Circle[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.Circle)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.Circle,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(Circle,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(compose,[Default]), UsedName(patterncase;Circle;init;,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(unapply,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(radius,[Default]), UsedName(andThen,[Default]), UsedName(canEqual,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]))) invalidates 1 classes due to The patterncase.Circle has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(Circle,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(compose,[Default]), UsedName(patterncase;Circle;init;,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(unapply,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(radius,[Default]), UsedName(andThen,[Default]), UsedName(canEqual,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.Circle)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from patterncase.Rectangle...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.Rectangle[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(patterncase.Rectangle)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(patterncase.Rectangle,ModifiedNames(changes = UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(height,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(patterncase;Rectangle;init;,[Default]), UsedName(unapply,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(Rectangle,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(tupled,[Default]))) invalidates 1 classes due to The patterncase.Rectangle has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(!=,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(asInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(copy$default$2,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName(description,[Default]), UsedName(copy$default$1,[Default]), UsedName(wait,[Default]), UsedName(height,[Default]), UsedName(##,[Default]), UsedName(getClass,[Default]), UsedName(clone,[Default]), UsedName(productElementNames,[Default]), UsedName(ne,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(patterncase;Rectangle;init;,[Default]), UsedName(unapply,[Default]), UsedName(width,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(synchronized,[Default]), UsedName(finalize,[Default]), UsedName(equals,[Default]), UsedName(Rectangle,[Default]), UsedName(canEqual,[Default]), UsedName(curried,[Default]), UsedName($init$,[Default]), UsedName(productIterator,[Default]), UsedName(tupled,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(patterncase.Rectangle)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: patterncase.SealedClassExample, patterncase.Circle, patterncase.Triangle, patterncase.Rectangle, patterncase.SequencePatternExample, patterncase.Shape, patterncase.UnknownShape[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated macros due to upstream dependencies change: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
